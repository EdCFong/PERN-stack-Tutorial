CREATE TABLE restaurants (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    location VARCHAR(50) NOT NULL,
    price_range INT NOT NULL check(price_range >= 1 and price_range <=5)
);


INSERT INTO restaurants (id, name, location, price_range) values (123, 'mcdonals','new york',3) 




Postgres

\l  lista todas las bases de datos
\c  abre una base de datos
\d  lista todas las tablas en la base de dtos




UPDATE restaurants SET name = 'rrr', location = 'h', price_range = $3 WHERE id = $2;


CREATE TABLE reviews (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    restaurant_id BIGINT NOT NULL REFERENCES restaurants(id),
    name VARCHAR(50) NOT NULL,
    review TEXT NOT NULL,
    rating INT NOT NULL check( rating >=1 and rating <=5)
);



INSERT INTO reviews (restaurant_id, name, review, rating) values (1, 'carl' , 'restaurant was awesome' , 5);


SELECT TRUNC( AVG(rating), 2) AS avg_rating FROM reviews WHERE restaurant_id =2;


SELECT * FROM restaurants LEFT JOIN (SELECT restaurant_id, COUNT(*), TRUNC( AVG(rating), 1) AS average_rating FROM reviews GROUP BY restaurant_id) reviews ON restaurant_id = reviews.restaurant_id;